// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC20/IERC20.sol";
import "@openzeppelin/contracts/utils/Address.sol";
import "@openzeppelin/contracts/security/ReentrancyGuard.sol";
import "../truster/TrusterLenderPool.sol";

/**
 * @title TrusterExploiter
 * @author Láº·c
 */
contract TrusterExploiter {

    using Address for address;

    address public immutable damnValuableToken;
    address private immutable pool;

    constructor (address tokenAddress, address _pool) {
        damnValuableToken = tokenAddress;
        pool = _pool;
    }

    function exploit(uint256 borrowAmount) external
    {
        IERC20(damnValuableToken).transfer(pool,borrowAmount);
    }

}
